{"version":3,"sources":["actions/authActions.js","actions/authActionTypes.js","components/LoginPage/LoginPage.jsx","actions/notesActions.js","actions/notesActionTypes.js","components/Spinner/Spinner.jsx","components/Notes/Notes.jsx","components/AddNote/AddNote.jsx","components/HomePage/HomePage.jsx","components/SignUpPage/SignUpPage.jsx","App.js","reducers/authReducer.js","reducers/notesReducer.js","reducers/rootReducer.js","store/index.js","index.js"],"names":["login_failure","error","type","connect","state","email","auth","loggedIn","token","loginError","dispatch","onLogin","password","fetch","method","headers","body","JSON","stringify","then","res","ok","Promise","reject","json","data","login_success","catch","err","login","onError","useState","email2","setEmail","setPassword","to","className","onSubmit","e","console","log","preventDefault","htmlFor","name","id","placeholder","value","onChange","target","fetchNotes","notes","Spinner","addError","onAdd","title","text","addNote","add","setAdd","setTitle","setText","onClick","class","maxLength","required","onKeyDown","style","cssText","height","scrollHeight","isFetching","deleteNote","noteId","useEffect","logged","logOut","signUpError","registered","onSignUp","signup_success","signup","App","exact","path","component","HomePage","SignUpPage","LoginPage","initialState","fetchError","combineReducers","action","deleteError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"wXA+BaA,EAAgB,SAAAC,GAC3B,MAAO,CACLC,KC/ByB,gBDgCzBD,UE+CWE,G,MAAAA,YAhBS,SAAAC,GACtB,MAAO,CACLC,MAAOD,EAAME,KAAKD,MAClBE,SAAUH,EAAME,KAAKC,SACrBC,MAAOJ,EAAME,KAAKE,MAClBP,MAAOG,EAAME,KAAKG,aAIK,SAAAC,GACzB,MAAO,CACLC,QAAS,SAACN,EAAOO,GAAR,OAAqBF,EF9Bb,SAACL,EAAOO,GAAR,OAAqB,SAAAF,GACxC,OAAOG,MAAM,6CAA8C,CACzDC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEb,QAAOO,eAE7BO,KAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,KAC3CD,KAAK,SAAAC,GAAG,OACPA,EAAII,OAAOL,KAAK,SAAAM,GAAI,OAAIf,EAlBR,SAACF,EAAOH,GAC5B,MAAO,CACLH,KCvCyB,gBDwCzBM,QACAH,SAcmCqB,CAAcD,EAAKjB,MAAOH,QAE5DsB,MAAM,SAAAC,GAAG,OAAIA,EAAIJ,OAAOL,KAAK,SAAAS,GAAG,OAAIlB,EAASV,EAAc4B,SEkBrBC,CAAMxB,EAAOO,KACpDkB,QAAS,SAAA7B,GAAK,OAAIS,EAASV,EAAcC,OAI9BE,CA3EG,SAAC,GAAyD,IAAvDI,EAAsD,EAAtDA,SAAiBN,GAAqC,EAA5CO,MAA4C,EAArCP,OAAOI,EAA8B,EAA9BA,MAAOM,EAAuB,EAAvBA,QAASmB,EAAc,EAAdA,QAAc,EAC9CC,mBAAS1B,GAAS,IAD4B,mBAClE2B,EADkE,KAC1DC,EAD0D,OAEzCF,mBAAS,IAFgC,mBAElEnB,EAFkE,KAExDsB,EAFwD,KAYzE,OAAO3B,EACL,kBAAC,IAAD,CAAU4B,GAAG,MAEb,yBAAKC,UAAU,aACb,wBAAIA,UAAU,UAAd,UACA,0BAAMA,UAAU,OAAOC,SAbV,SAAAC,GAGf,OAFAC,QAAQC,IAAI,GACZF,EAAEG,iBACGT,EACApB,OACLD,EAAQqB,EAAQpB,GADMkB,EAAQ,2BADVA,EAAQ,4BAWxB,yBAAKM,UAAU,YACb,2BAAOA,UAAU,aAAaM,QAAQ,SACpC,uBAAGN,UAAU,4BAEf,2BACEA,UAAU,aACVlC,KAAK,QACLyC,KAAK,QACLC,GAAG,QACHC,YAAY,QACZC,MAAOd,EACPe,SAAU,SAAAT,GAAC,OAAIL,EAASK,EAAEU,OAAOF,WAGrC,yBAAKV,UAAU,YACb,2BAAOA,UAAU,aAAaM,QAAQ,YACpC,uBAAGN,UAAU,iBAEf,2BACEA,UAAU,aACVlC,KAAK,WACLyC,KAAK,WACLC,GAAG,WACHC,YAAY,WACZC,MAAOlC,EACPmC,SAAU,SAAAT,GAAC,OAAIJ,EAAYI,EAAEU,OAAOF,WAGxC,yBAAKV,UAAU,aAAanC,GAC5B,4BAAQmC,UAAU,aAAalC,KAAK,UAApC,WAIF,uBAAGkC,UAAU,QAAb,wBACA,kBAAC,IAAD,CAAMA,UAAU,OAAOD,GAAG,WAA1B,eCpCOc,EAAa,SAAAzC,GAAK,OAAI,SAAAE,GAEjC,OADAA,EApBO,CACLR,KCJoB,aDwBfW,MAAM,6CAA8C,CACzDC,OAAQ,MACRC,QAAS,CACPT,KAAME,KAGPW,KAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,KAC3CD,KAAK,SAAAC,GAAG,OAAIA,EAAII,OAAOL,KAAK,SAAAM,GAAI,OAAIf,EAtBhC,CACLR,KCTyB,gBDUzBgD,MAoB4DzB,QAC3DE,MAAM,SAAAC,GAAG,OAAIA,EAAIJ,OAAOL,KAAK,SAAAS,GAAG,OAAIlB,EAhBhC,CACLR,KCfyB,gBDgBzBD,MAc4D2B,U,QElBjDuB,G,YAXC,WACd,OACE,yBAAKf,UAAU,UACb,8BACA,8BACA,8BACA,iCC6CSjC,G,MC6BAA,YAbS,SAAAC,GACtB,MAAO,CACLI,MAAOJ,EAAME,KAAKE,MAClBP,MAAOG,EAAMqB,KAAK2B,WAIK,SAAA1C,GACzB,MAAO,CACL2C,MAAO,SAAC7C,EAAO8C,EAAOC,GAAf,OAAwB7C,EJ/BZ,SAACF,EAAO8C,EAAOC,GAAf,OAAwB,SAAA7C,GAC7C,OAAOG,MAAM,6CAA8C,CACzDC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBT,KAAME,GAERQ,KAAMC,KAAKC,UAAU,CAAEoC,QAAOC,WAE7BpC,KAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,KAC3CD,KAAK,SAAAC,GAAG,OACPA,EACGI,OACAL,KAAK,SAAAM,GACJc,QAAQC,IAAI,SAAUf,GACtBf,EA3BD,CACLR,KCjCuB,kBD6DlBiB,KAAK,kBAAMT,EAASuC,EAAWzC,QAEnCmB,MAAM,SAAAC,GAAG,OACRA,EAAIJ,OAAOL,KAAK,SAAAS,GA3BF,IAAA3B,EA4BZsC,QAAQC,IAAIZ,GACZlB,EA5BC,CACLR,KCtCuB,cDuCvBD,eImCwCuD,CAAQhD,EAAO8C,EAAOC,OAInDpD,CA9EC,SAAC,GAAwC,EAAtCF,MAAuC,IAAhCO,EAA+B,EAA/BA,MAAO6C,EAAwB,EAAxBA,MAAwB,KAAjBJ,WAChBlB,oBAAS,IADwB,mBAChD0B,EADgD,KAC3CC,EAD2C,OAE7B3B,qBAF6B,mBAEhDuB,EAFgD,KAEzCK,EAFyC,OAG/B5B,qBAH+B,mBAGhDwB,EAHgD,KAG1CK,EAH0C,KAgBvD,OACE,oCACE,yBAAKxB,UAAU,WAAWyB,QAAS,kBAAMH,GAAO,KAC9C,uBAAGtB,UAAU,iBAEdqB,GACC,yBAAKrB,UAAU,SACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,QAAQyB,QAAS,kBAAMH,GAAO,KAC3C,uBAAGI,MAAM,yBAEX,0BAAM1B,UAAU,gBAAgBC,SAjBzB,SAAAC,GACfA,EAAEG,iBACFY,EAAM7C,EAAO8C,EAAOC,GACpBG,GAAO,GAPPE,EAAQ,IACRD,EAAS,MAqBC,2BAAOvB,UAAU,QAAQM,QAAQ,YAAjC,cAGA,8BACEE,GAAG,WACHmB,UAAU,KACVlB,YAAY,QACZC,MAAOQ,EACPU,UAAQ,EACRjB,SAAU,SAAAT,GAAC,OAAIqB,EAASrB,EAAEU,OAAOF,UAEnC,6BACA,2BAAOV,UAAU,QAAQM,QAAQ,WAAjC,aAGA,8BACEE,GAAG,UACHC,YAAY,OACZC,MAAOS,EACPS,UAAQ,EACRjB,SAAU,SAAAT,GAAC,OAAIsB,EAAQtB,EAAEU,OAAOF,QAChCmB,UAAW,SAAA3B,GACTA,EAAEU,OAAOkB,MAAMC,QAAU,eACzB7B,EAAEU,OAAOkB,MAAME,OAAS9B,EAAEU,OAAOqB,aAAe,QAGpD,4BAAQnE,KAAK,SAASkC,UAAU,gBAC9B,uBAAGA,UAAU,uB,MDNdjC,YAlBS,SAAAC,GACtB,MAAO,CACLkE,WAAYlE,EAAMqB,KAAK6C,WACvBpB,MAAO9C,EAAMqB,KAAKyB,MAClB1C,MAAOJ,EAAME,KAAKE,QAIK,SAAAE,GACzB,MAAO,CACLuC,WAAY,SAAAzC,GAAK,OAAIE,EAASuC,EAAWzC,KACzC+D,WAAY,SAAC/D,EAAOgE,GAClB9D,EHwCoB,SAACF,EAAOgE,GAAR,OAAmB,SAAA9D,GAC3C,OAAOG,MAAM,8CAAD,OAA+C2D,GAAU,CACnE1D,OAAQ,SACRC,QAAS,CACP,eAAgB,mBAChBT,KAAME,KAGPW,KAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,KAC3CD,KAAK,SAAAC,GAAG,OACPA,EACGI,OACAL,KAAK,SAAAM,GACJc,QAAQC,IAAI,WAAYf,GACxBf,EA1BD,CACLR,KCtE0B,qBDiGrBiB,KAAK,kBAAMT,EAASuC,EAAWzC,QAEnCmB,MAAM,SAAAC,GAAG,OACRA,EAAIJ,OAAOL,KAAK,SAAAS,GA1BC,IAAA3B,EA2BfsC,QAAQC,IAAIZ,GACZlB,EA3BC,CACLR,KC3E0B,iBD4E1BD,eGpCWsE,CAAW/D,EAAOgE,IAC3B9D,EAASuC,EAAWzC,OAKXL,CA9CD,SAAC,GAAyD,EAAvD+C,MAAuD,EAAhDoB,WAAiD,IAArC9D,EAAoC,EAApCA,MAAOyC,EAA6B,EAA7BA,WAA6B,EAAjBsB,WAIrD,OAHAE,oBAAU,WACRxB,EAAWzC,IACV,CAACyC,EAAYzC,IAEd,oCACE,kBAAC,EAAD,UEkDSL,G,MAAAA,YAbS,SAAAC,GACtB,MAAO,CACLC,MAAOD,EAAME,KAAKD,MAClBqE,OAAQtE,EAAME,KAAKC,WAII,SAAAG,GACzB,MAAO,CACLiE,OAAQ,kBAAMjE,ERET,CACLR,KC3DmB,eO4DRC,CAzDE,SAAC,GAA+B,IAA7BE,EAA4B,EAA5BA,MAAOqE,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OACjC,OACE,oCACE,gCACE,yBAAKvC,UAAU,QAAf,SACCsC,GACC,yBAAKtC,UAAU,WACb,yBAAKA,UAAU,gBAAgB/B,GAC/B,yBAAK+B,UAAU,SAASyB,QAASc,GAC/B,uBAAGvC,UAAU,2BAKpBsC,EACC,kBAAC,EAAD,MAEA,yBAAKtC,UAAU,OACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,gBAAd,WACA,uBAAGA,UAAU,QAAb,+FAIA,kBAAC,IAAD,CAAMA,UAAU,0BAA0BD,GAAG,WAA7C,YAIF,0BAAMC,UAAU,WAAhB,MACA,yBAAKA,UAAU,cACb,wBAAIA,UAAU,gBAAd,UACA,uBAAGA,UAAU,QAAb,0DAGA,kBAAC,IAAD,CAAMA,UAAU,yBAAyBD,GAAG,UAA5C,gBCgCGhC,G,MAAAA,YAbS,SAAAC,GACtB,MAAO,CACLH,MAAOG,EAAME,KAAKsE,YAClBC,WAAYzE,EAAME,KAAKuE,aAIA,SAAAnE,GACzB,MAAO,CACLoE,SAAU,SAACzE,EAAOO,GAAR,OAAqBF,ETrDb,SAACL,EAAOO,GAAR,OAAqB,SAAAF,GACzC,OAAOG,MAAM,8CAA+C,CAC1DC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEb,QAAOO,eAE7BO,KAAK,SAAAC,GAAG,OAAKA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,KAC3CD,KAAK,SAACC,GAAD,OACJA,EAAII,OAAOL,KAAK,SAAAM,GAAI,OAAIf,EAjBP,SAAAL,GACrB,MAAO,CACLH,KCJ0B,iBDK1BG,SAcmC0E,CAAe1E,QAEjDsB,MAAM,SAAAC,GAAG,OAAIA,EAAIJ,OAAOL,KAAK,SAAAS,GAAG,OAAIlB,EAzBhC,CACLR,KCI0B,iBDH1BD,MAuB6D2B,SSyCrBoD,CAAO3E,EAAOO,OAI3CT,CAnEI,SAAC,GAAqC,IAAnCF,EAAkC,EAAlCA,MAAO4E,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SAAe,EAC5B/C,mBAAS,IADmB,mBAC/C1B,EAD+C,KACxC4B,EADwC,OAEtBF,mBAAS,IAFa,mBAE/CnB,EAF+C,KAErCsB,EAFqC,KAQtD,OAAO2C,EACL,kBAAC,IAAD,CAAU1C,GAAG,WAEb,yBAAKC,UAAU,aACb,wBAAIA,UAAU,UAAd,WACA,wBAAIA,UAAU,0BAAd,uBACA,0BAAMA,UAAU,OAAOC,SAVV,SAAAC,GACfA,EAAEG,iBACFqC,EAASzE,EAAOO,KASZ,yBAAKwB,UAAU,YACb,2BAAOA,UAAU,aAAaM,QAAQ,SACpC,uBAAGN,UAAU,4BAEf,2BACEA,UAAU,aACVlC,KAAK,QACLyC,KAAK,QACLC,GAAG,QACHC,YAAY,QACZE,SAAU,SAAAT,GAAC,OAAIL,EAASK,EAAEU,OAAOF,WAGrC,yBAAKV,UAAU,YACb,2BAAOA,UAAU,aAAaM,QAAQ,YACpC,uBAAGN,UAAU,iBAEf,2BACEA,UAAU,aACVlC,KAAK,WACLyC,KAAK,WACLC,GAAG,WACHC,YAAY,WACZE,SAAU,SAAAT,GAAC,OAAIJ,EAAYI,EAAEU,OAAOF,WAGxC,yBAAKV,UAAU,aAAanC,GAC5B,4BAAQmC,UAAU,aAAalC,KAAK,UAApC,YAIF,uBAAGkC,UAAU,gBAAb,yBACA,kBAAC,IAAD,CAAMA,UAAU,OAAOD,GAAG,UAA1B,c,MCpCS8C,MAVf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWE,IACjC,kBAAC,IAAD,CAAOH,KAAK,SAASC,UAAWG,M,2jBCVtC,IAAMC,EAAe,CACnBjF,UAAU,EACVsE,YAAY,G,mjBCFd,IAAMW,EAAe,CAAElB,YAAY,EAAOmB,WAAY,KAAMvC,MAAO,ICEpDwC,cAAgB,CAC7BpF,KFEa,WAAmC,IAAlCF,EAAiC,uDAAzBoF,EAAcG,EAAW,uCAC/C,OAAQA,EAAOzF,MACb,IVPyB,gBUQvB,OAAO,EAAP,GAAYE,EAAZ,CAAmBG,UAAU,EAAOE,WAAYkF,EAAO1F,QACzD,IVVyB,gBUWvB,OAAO,EAAP,GACKG,EADL,CAEEG,UAAU,EACVC,MAAOmF,EAAOnF,MACdP,MAAO,KACPI,MAAOsF,EAAOtF,QAElB,IVX0B,iBUYxB,OAAO,EAAP,GAAYD,EAAZ,CAAmBwE,YAAae,EAAO1F,QACzC,IVd0B,iBUexB,OAAO,EAAP,GACKG,EADL,CAEEyE,YAAY,EACZtE,UAAU,EACVF,MAAOsF,EAAOtF,QAElB,IVxBmB,UUyBjB,OAAO,EAAP,GACKD,EADL,CAEEG,UAAU,EACVF,MAAO,KACPG,MAAO,OAEX,QACE,OAAOJ,IE9BXqB,KDFa,WAAmC,IAAlCrB,EAAiC,uDAAzBoF,EAAcG,EAAW,uCAC/C,OAAQA,EAAOzF,MACb,IRNoB,WQOlB,OAAO,KAAKE,EAAZ,CAAmBkE,YAAY,IACjC,IRPyB,gBQQvB,OAAO,KAAKlE,EAAZ,CAAmBkE,YAAY,EAAOpB,MAAOyC,EAAOzC,QACtD,IRRyB,gBQSvB,OAAO,KAAK9C,EAAZ,CAAmBkE,YAAY,EAAOmB,WAAYE,EAAO1F,QAC3D,IRPuB,cQQrB,OAAO,KAAKG,EAAZ,CAAmBgD,SAAUuC,EAAO1F,QACtC,IRN0B,iBQOxB,OAAO,KAAKG,EAAZ,CAAmBwF,YAAaD,EAAO1F,QACzC,QACE,OAAOG,M,QEbPyF,EAAmBC,OAAOC,sCAAwCC,IAEzDC,cACbC,EACAL,EAAiBM,YAAgBC,OCFnCC,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOA,GACf,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d19f49ff.chunk.js","sourcesContent":["import * as types from \"./authActionTypes\";\r\n\r\nexport const signup_failure = error => {\r\n  return {\r\n    type: types.SIGNUP_FAILURE,\r\n    error\r\n  };\r\n};\r\n\r\nconst signup_success = email => {\r\n  return {\r\n    type: types.SIGNUP_SUCCESS,\r\n    email\r\n  };\r\n};\r\n\r\nexport const signup = (email, password) => dispatch => {\r\n  return fetch(\"https://notes-api1.herokuapp.com/api/signup\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({ email, password })\r\n  })\r\n    .then(res => (res.ok ? res : Promise.reject(res)))\r\n    .then((res /*тут можно сразу логинить */) =>\r\n      res.json().then(data => dispatch(signup_success(email)))\r\n    )\r\n    .catch(err => err.json().then(err => dispatch(signup_failure(err))));\r\n};\r\n\r\nexport const login_failure = error => {\r\n  return {\r\n    type: types.LOGIN_FAILURE,\r\n    error\r\n  };\r\n};\r\n\r\nconst login_success = (token, email) => {\r\n  return {\r\n    type: types.LOGIN_SUCCESS,\r\n    token,\r\n    email\r\n  };\r\n};\r\n\r\nexport const login = (email, password) => dispatch => {\r\n  return fetch(\"https://notes-api1.herokuapp.com/api/login\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({ email, password })\r\n  })\r\n    .then(res => (res.ok ? res : Promise.reject(res)))\r\n    .then(res =>\r\n      res.json().then(data => dispatch(login_success(data.token, email)))\r\n    )\r\n    .catch(err => err.json().then(err => dispatch(login_failure(err))));\r\n};\r\n\r\nexport const logout = () => {\r\n  return {\r\n    type: types.LOG_OUT\r\n  };\r\n};\r\n","export const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\n\r\nexport const LOG_OUT = \"LOG_OUT\";\r\n\r\nexport const SIGNUP_REQUEST = \"SIGNUP_REQUEST\";\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const SIGNUP_FAILURE = \"SIGNUP_FAILURE\";\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { login, login_failure } from \"../../actions/authActions\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport \"./LoginPage.css\";\r\n\r\nconst LoginForm = ({ loggedIn, token, error, email, onLogin, onError }) => {\r\n  const [email2, setEmail] = useState(email || \"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const onSubmit = e => {\r\n    console.log(1);\r\n    e.preventDefault();\r\n    if (!email2) return onError(\"You must specify email\");\r\n    if (!password) return onError(\"You must enter password\");\r\n    onLogin(email2, password);\r\n  };\r\n\r\n  return loggedIn ? (\r\n    <Redirect to=\"/\"></Redirect>\r\n  ) : (\r\n    <div className=\"container\">\r\n      <h1 className=\"header\">Log in</h1>\r\n      <form className=\"form\" onSubmit={onSubmit}>\r\n        <div className=\"form-row\">\r\n          <label className=\"form-label\" htmlFor=\"email\">\r\n            <i className=\"fas fa-envelope-square\"></i>\r\n          </label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email2}\r\n            onChange={e => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label className=\"form-label\" htmlFor=\"password\">\r\n            <i className=\"fas fa-lock\"></i>\r\n          </label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"error-msg\">{error}</div>\r\n        <button className=\"btn-submit\" type=\"submit\">\r\n          Log In\r\n        </button>\r\n      </form>\r\n      <p className=\"text\">Haven't account yet?</p>\r\n      <Link className=\"link\" to=\"/signup\">\r\n        Sign Up\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    email: state.auth.email,\r\n    loggedIn: state.auth.loggedIn,\r\n    token: state.auth.token,\r\n    error: state.auth.loginError\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogin: (email, password) => dispatch(login(email, password)),\r\n    onError: error => dispatch(login_failure(error))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LoginForm);\r\n","import * as types from \"./notesActionTypes\";\r\n\r\nconst fetching = () => {\r\n  return {\r\n    type: types.FETCHING\r\n  };\r\n};\r\n\r\nconst fetch_success = notes => {\r\n  return {\r\n    type: types.FETCH_SUCCESS,\r\n    notes\r\n  };\r\n};\r\n\r\nconst fetch_failure = error => {\r\n  return {\r\n    type: types.FETCH_FAILURE,\r\n    error\r\n  };\r\n};\r\n\r\nexport const fetchNotes = token => dispatch => {\r\n  dispatch(fetching());\r\n  return fetch(\"https://notes-api1.herokuapp.com/api/notes\", {\r\n    method: \"GET\",\r\n    headers: {\r\n      auth: token\r\n    }\r\n  })\r\n    .then(res => (res.ok ? res : Promise.reject(res)))\r\n    .then(res => res.json().then(data => dispatch(fetch_success(data))))\r\n    .catch(err => err.json().then(err => dispatch(fetch_failure(err))));\r\n};\r\n\r\nconst add_success = () => {\r\n  return {\r\n    type: types.ADD_SUCCESS\r\n  };\r\n};\r\n\r\nconst add_failure = error => {\r\n  return {\r\n    type: types.ADD_FAILURE,\r\n    error\r\n  };\r\n};\r\n\r\nexport const addNote = (token, title, text) => dispatch => {\r\n  return fetch(\"https://notes-api1.herokuapp.com/api/notes\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      auth: token\r\n    },\r\n    body: JSON.stringify({ title, text })\r\n  })\r\n    .then(res => (res.ok ? res : Promise.reject(res)))\r\n    .then(res =>\r\n      res\r\n        .json()\r\n        .then(data => {\r\n          console.log(\"added:\", data);\r\n          dispatch(add_success());\r\n        })\r\n        .then(() => dispatch(fetchNotes(token)))\r\n    )\r\n    .catch(err =>\r\n      err.json().then(err => {\r\n        console.log(err);\r\n        dispatch(add_failure());\r\n      })\r\n    );\r\n};\r\n\r\nconst delete_success = () => {\r\n  return {\r\n    type: types.DELETE_SUCCESS\r\n  };\r\n};\r\n\r\nconst delete_failure = error => {\r\n  return {\r\n    type: types.DELETE_FAILURE,\r\n    error\r\n  };\r\n};\r\n\r\nexport const deleteNote = (token, noteId) => dispatch => {\r\n  return fetch(`https://notes-api1.herokuapp.com/api/notes/${noteId}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      auth: token\r\n    }\r\n  })\r\n    .then(res => (res.ok ? res : Promise.reject(res)))\r\n    .then(res =>\r\n      res\r\n        .json()\r\n        .then(data => {\r\n          console.log(\"deleted:\", data);\r\n          dispatch(delete_success());\r\n        })\r\n        .then(() => dispatch(fetchNotes(token)))\r\n    )\r\n    .catch(err =>\r\n      err.json().then(err => {\r\n        console.log(err);\r\n        dispatch(delete_failure());\r\n      })\r\n    );\r\n};\r\n","export const FETCHING = \"FETCHING\";\r\nexport const FETCH_SUCCESS = \"FETCH_SUCCESS\";\r\nexport const FETCH_FAILURE = \"FETCH_FAILURE\";\r\n\r\nexport const ADD_SUCCESS = \"ADD_SUCCESS\";\r\nexport const ADD_FAILURE = \"ADD_FAILURE\";\r\n\r\nexport const DELETE_SUCCESS = \"DELETE_SUCCESS\";\r\nexport const DELETE_FAILURE = \"DELETE_FAILURE\";\r\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchNotes, deleteNote } from \"../../actions/notesActions\";\r\nimport Note from \"../Note/Note\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport AddNote from \"../AddNote/AddNote\";\r\nimport \"./Notes.css\";\r\n\r\nconst Notes = ({ notes, isFetching, token, fetchNotes, deleteNote }) => {\r\n  useEffect(() => {\r\n    fetchNotes(token);\r\n  }, [fetchNotes, token]);\r\n  return (\r\n    <>\r\n      <Spinner />\r\n      {/* {isFetching ? (\r\n        <Spinner />\r\n      ) : notes.length === 0 ? (\r\n        <div>no notes</div>\r\n      ) : (\r\n        <div className=\"notes\">\r\n          {notes.map(note => (\r\n            <Note\r\n              key={note._id}\r\n              {...note}\r\n              token={token}\r\n              deleteNote={() => deleteNote(token, note._id)}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n      <AddNote /> */}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isFetching: state.data.isFetching,\r\n    notes: state.data.notes,\r\n    token: state.auth.token\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchNotes: token => dispatch(fetchNotes(token)),\r\n    deleteNote: (token, noteId) => {\r\n      dispatch(deleteNote(token, noteId));\r\n      dispatch(fetchNotes(token));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Notes);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./AddNote.css\";\r\nimport { addNote, fetchNotes } from \"../../actions/notesActions\";\r\n\r\nconst AddNote = ({ error, token, onAdd, fetchNotes }) => {\r\n  const [add, setAdd] = useState(false);\r\n  const [title, setTitle] = useState();\r\n  const [text, setText] = useState();\r\n\r\n  const resetFields = () => {\r\n    setText(\"\");\r\n    setTitle(\"\");\r\n  };\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    onAdd(token, title, text);\r\n    setAdd(false);\r\n    resetFields();\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"add-note\" onClick={() => setAdd(true)}>\r\n        <i className=\"fas fa-plus\"></i>\r\n      </div>\r\n      {add && (\r\n        <div className=\"modal\">\r\n          <div className=\"new-note\">\r\n            <div className=\"close\" onClick={() => setAdd(false)}>\r\n              <i class=\"far fa-times-circle\"></i>\r\n            </div>\r\n            <form className=\"new-note-form\" onSubmit={onSubmit}>\r\n              <label className=\"label\" htmlFor=\"newtitle\">\r\n                Note title\r\n              </label>\r\n              <textarea\r\n                id=\"newtitle\"\r\n                maxLength=\"20\"\r\n                placeholder=\"title\"\r\n                value={title}\r\n                required\r\n                onChange={e => setTitle(e.target.value)}\r\n              ></textarea>\r\n              <hr />\r\n              <label className=\"label\" htmlFor=\"newtext\">\r\n                Note text\r\n              </label>\r\n              <textarea\r\n                id=\"newtext\"\r\n                placeholder=\"text\"\r\n                value={text}\r\n                required\r\n                onChange={e => setText(e.target.value)}\r\n                onKeyDown={e => {\r\n                  e.target.style.cssText = \"height:auto;\";\r\n                  e.target.style.height = e.target.scrollHeight + \"px\";\r\n                }}\r\n              ></textarea>\r\n              <button type=\"submit\" className=\"new-note-btn\">\r\n                <i className=\"fas fa-plus\"></i>\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    token: state.auth.token,\r\n    error: state.data.addError\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAdd: (token, title, text) => dispatch(addNote(token, title, text))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AddNote);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logout } from \"../../actions/authActions\";\r\nimport Notes from \"../Notes/Notes\";\r\nimport \"./HomePage.css\";\r\n\r\nconst HomePage = ({ email, logged, logOut }) => {\r\n  return (\r\n    <>\r\n      <header>\r\n        <div className=\"logo\">Notes</div>\r\n        {logged && (\r\n          <div className=\"profile\">\r\n            <div className=\"border email\">{email}</div>\r\n            <div className=\"logout\" onClick={logOut}>\r\n              <i className=\"fas fa-sign-out-alt\"></i>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </header>\r\n      {logged ? (\r\n        <Notes />\r\n      ) : (\r\n        <div className=\"box\">\r\n          <div className=\"signup card\">\r\n            <h1 className=\"text-opacity\">Sign Up</h1>\r\n            <p className=\"text\">\r\n              Create account and use our perfect service! You will never forget\r\n              anything with this notes!\r\n            </p>\r\n            <Link className=\"link border border-blue\" to=\"/signup\">\r\n              Sign Up\r\n            </Link>\r\n          </div>\r\n          <span className=\"divider\">or</span>\r\n          <div className=\"login card\">\r\n            <h1 className=\"text-opacity\">Log In</h1>\r\n            <p className=\"text\">\r\n              Use notes every day and your life will be much easier!\r\n            </p>\r\n            <Link className=\"link border border-red\" to=\"/login\">\r\n              Log In\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    email: state.auth.email,\r\n    logged: state.auth.loggedIn\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logOut: () => dispatch(logout())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HomePage);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { signup } from \"../../actions/authActions\";\r\nimport \"./SignUpPage.css\";\r\n\r\nconst SignUpPage = ({ error, registered, onSignUp }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    onSignUp(email, password);\r\n  };\r\n  return registered ? (\r\n    <Redirect to=\"/login\"></Redirect>\r\n  ) : (\r\n    <div className=\"container\">\r\n      <h1 className=\"header\">Sign Up</h1>\r\n      <h4 className=\"subheader text-opacity\">Create new account!</h4>\r\n      <form className=\"form\" onSubmit={onSubmit}>\r\n        <div className=\"form-row\">\r\n          <label className=\"form-label\" htmlFor=\"email\">\r\n            <i className=\"fas fa-envelope-square\"></i>\r\n          </label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"Email\"\r\n            onChange={e => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <label className=\"form-label\" htmlFor=\"password\">\r\n            <i className=\"fas fa-lock\"></i>\r\n          </label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"error-msg\">{error}</div>\r\n        <button className=\"btn-submit\" type=\"submit\">\r\n          Sign Up\r\n        </button>\r\n      </form>\r\n      <p className=\"text-opacity\">Already have account?</p>\r\n      <Link className=\"link\" to=\"/login\">\r\n        Log In\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    error: state.auth.signUpError,\r\n    registered: state.auth.registered\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSignUp: (email, password) => dispatch(signup(email, password))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignUpPage);\r\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport LoginPage from \"./components/LoginPage/LoginPage\";\nimport HomePage from \"./components/HomePage/HomePage\";\nimport SignUpPage from \"./components/SignUpPage/SignUpPage\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={HomePage} />\n      <Route path=\"/signup\" component={SignUpPage} />\n      <Route path=\"/login\" component={LoginPage} />\n    </Router>\n  );\n}\n\nexport default App;\n","import * as types from \"../actions/authActionTypes\";\r\n\r\nconst initialState = {\r\n  loggedIn: false,\r\n  registered: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.LOGIN_FAILURE:\r\n      return { ...state, loggedIn: false, loginError: action.error };\r\n    case types.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loggedIn: true,\r\n        token: action.token,\r\n        error: null,\r\n        email: action.email\r\n      };\r\n    case types.SIGNUP_FAILURE:\r\n      return { ...state, signUpError: action.error };\r\n    case types.SIGNUP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        registered: true,\r\n        loggedIn: false,\r\n        email: action.email\r\n      };\r\n    case types.LOG_OUT:\r\n      return {\r\n        ...state,\r\n        loggedIn: false,\r\n        email: null,\r\n        token: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as types from \"../actions/notesActionTypes\";\r\n\r\nconst initialState = { isFetching: false, fetchError: null, notes: [] };\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.FETCHING:\r\n      return { ...state, isFetching: true };\r\n    case types.FETCH_SUCCESS:\r\n      return { ...state, isFetching: false, notes: action.notes };\r\n    case types.FETCH_FAILURE:\r\n      return { ...state, isFetching: false, fetchError: action.error };\r\n    case types.ADD_FAILURE:\r\n      return { ...state, addError: action.error };\r\n    case types.DELETE_FAILURE:\r\n      return { ...state, deleteError: action.error };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport notesReducer from \"./notesReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  data: notesReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"../reducers/rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}